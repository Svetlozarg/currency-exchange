<============================================================================>
Junior Task
/* Мини система за визуализация и анализ с известяване и експорт във файл. */

Съдържание
    1./* Изисквания */
    2./* Информация за проекта */
    3./* MySQL информация */
    4./* Как се стартира проекта */
<============================================================================>

1./* Изисквания */
1. Общи
    [X] Интерфейсът трябва да е респонсив (препоръчително използване на Bootstrap >= 4)
    [X] За проекта да се използва PHP (>= 7), MySql, JavaScript ( или jQuery)
2. Публичната част
    [X] Форма за регистрация на потребител
    [X] Формите трябва да имат валидация (клиентска и сървърна)
    [X] За събмит да се използва AJAX
3. Потребителска част
    [X] Възможност за редакция на потребителски профил;
    [X] Визуализация на финансовите инструменти (e.g. currency exchanges) в
        табличен вид чрез използване на REST API за получаване на данни (може да се използва ​https://openexchangerates.org/)​
    [X] Възможност данните да бъдат подреждани (низходящо - възходящо по колона),
        филтрирани(филтър за избор по вид, по стойност -от:до и т.н.), записвани в БД, експортвани във файл(csv, xls);
    [X] Визуализация на данните с чартове (ползване на js библиотека за чартове по избор);

2./* Информация за проекта */
Framework: Laravel 8
Bootstrap: 5

Пътища:
 - /login -> защитен път, ако потребител е логнат, пренасочи към /
 - /register -> защитен път, ако потребител е логнат, преносачи към /
 - / -> защитен път, ако потребител не е логнат, пренасочи към /login
 - /profile -> защитен път, ако потребител не е логнат, пренасочи към /login
 - /chart -> защитен път, ако потребител не е логнат, пренасочи към /login

Публична част:
Login и Register форми с валидация създадени чрез laravel/ui пакетa
 - пълна валидация от формата до датабазата, с хашване на пароли

Потребителска част:
 - път /profile -> с форма за промяна на име и имейл, чрез post метод за ъпдейт на информацията в датабазата
 - път / -> визуализация на Dashboard
   - таблица интегрирана чрез Yajra Datatables Framework
   - таблица с дата от openexchangerates API
   - таблицата има филтър за подредба по колони, търсачка и пагинация
   - таблицата има два бутона за експорт в excel и csv формат
 - път /chart -> визуализация на Chart
   - чарт интегриран чрез ChartJS Framework
   - чарт с дата от openexchangerates API

3./* MySQL информация */
Main table: currency_exchange
    users table:
        - съдържа датата за всички регистрирани потребители
        - по колони
            - име
            - имейл
            - парола
            - токен за запомняне при повторно влизане в сайта
    dashboards table
        - съдържа цялата дата, вземата от API
        - по колони
            - currency -> името на валутата
            - code -> кода на валутата
            - rate -> текущия курс

4./* Как се стартира проекта */
    1. cd currency_exchange
    2. composer update
    3. composer install
    4. mysql -u root -p
    5. CREATE DATABASE dashboards;
    6. php artisan migrate
    7. php artisan config:clear
    8. php artisan serve
